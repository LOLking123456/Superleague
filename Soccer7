                     
local Rayfield = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Rayfield/main/source"))()


local Window = Rayfield:CreateWindow({
	Name = "Super League Soccer | Legend HandlesYT",
	LoadingTitle = "Super League Soccer",
	LoadingSubtitle = "YT: Legend Handles",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = nil, -- Create a custom folder for your hub/game
		FileName = "script"

}	})
local Tab2 = Window:CreateTab("Main-Features", 4483362458) -- Title, Image




Tab2:CreateLabel("Main")



	 Tab2:CreateToggle({
	Name = "Player Height (No Steal)",
	CurrentValue = false,
	Callback = function(state)
	    if state then
  Float_Height = 17 -- Your float height | 5 is default

local i=1
G=game;
_=wait;
p=G:GetService("Players").LocalPlayer.Character
p:FindFirstChild("Humanoid").HipHeight = Float_Height
for i=1,i do
repeat p:FindFirstChild("Humanoid").HipHeight=Float_Height-n _(t)p:FindFirstChild("Humanoid").HipHeight=Float_Height+n _(t) until
p:FindFirstChild("Humanoid").Health == 0
end

            else
  Float_Height = 2 -- Your float height | 5 is default

local i=1
G=game;
_=wait;
p=G:GetService("Players").LocalPlayer.Character
p:FindFirstChild("Humanoid").HipHeight = Float_Height
for i=1,i do
repeat p:FindFirstChild("Humanoid").HipHeight=Float_Height-n _(t)p:FindFirstChild("Humanoid").HipHeight=Float_Height+n _(t) until
p:FindFirstChild("Humanoid").Health == 0
end


        end
	    end})


	 Tab2:CreateToggle({
	Name = "Ball Reach",
	CurrentValue = false,
	Callback = function(Value)
	     a = Value
        while a do task.wait(.5)
        pcall(function()
       for i,v in pairs(game.Workspace:GetDescendants()) do
     if v.Name == "Gameball" then
  v.Size = Vector3.new(40,40,40)
     end
     end
        end)
        end
	    end})
 
 
	 Tab2:CreateToggle({
	Name = "Remove Ball Reach",
	CurrentValue = false,
	Callback = function(Value)
	     a = Value
        while a do task.wait(.5)
        pcall(function()
       for i,v in pairs(game.Workspace:GetDescendants()) do
     if v.Name == "Gameball" then
  v.Size = Vector3.new(2,2,2)
     end
     end
        end)
        end
	    end})

	 Tab2:CreateToggle({
	Name = "Auto Spam Spin",
	CurrentValue = false,
	Callback = function(Value)
	     a = Value
        while a do task.wait()
        pcall(function()
  
game:GetService("ReplicatedStorage").RemoteEvents.Football.Tackle:FireServer()

        end)
        end
	    end})
    

	 Tab2:CreateToggle({
	Name = "Auto Tackle",
	CurrentValue = false,
	Callback = function(Value)
	     a = Value
        while a do task.wait(.2)
        pcall(function()

game:GetService("ReplicatedStorage").RemoteEvents.Football.Tackle:FireServer()

        end)
        end
	    end})


		
	 Tab2:CreateToggle({
	Name = "Ball ESP",
	CurrentValue = false,
	Callback = function(state)
		if state then
	for __,v in pairs(game.workspace:GetChildren()) do -- the path
 if v.Name == "Gameball" then -- the item
   local a = Instance.new("BillboardGui",v) -- pretty much explains everything
   a.Name = "Soccer"
   a.Size = UDim2.new(10,0, 10,0)
   a.AlwaysOnTop = true
   local b = Instance.new("Frame",a)
   b.Size = UDim2.new(1,0, 1,0)
   b.BackgroundTransparency = 1
   b.BorderSizePixel = 0
   b.BackgroundColor3 = Color3.new(0, 255, 0)
   local c = Instance.new('TextLabel',b)
   c.Size = UDim2.new(2,0,2,0)
   c.BorderSizePixel = 0
   c.TextSize = 15
   c.Text = "Soccerball"
   c.BackgroundTransparency = 1
 end
end
		else
	 for i,v in pairs(workspace["Gameball"]:GetChildren()) do
                    if v.Name == "Soccer" then
                    v:Destroy()
                    end
                    end
		    end
    end})


Tab2:CreateLabel("Free Gamepass Emotes")


Tab2:CreateButton({
	Name = "Griddy",
	Callback = function()
  Player = "LocalPlayer" --- you can still put any player name here
AnimationId = "13233753849" --- add ID's from the bottom[/size]
local Anim = Instance.new("Animation") --- Creates animation[/size]
Anim.AnimationId = "rbxassetid://"..AnimationId ---- inserts the ID[/size]
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim) --- makes the animation a function[/size]
k:Play() --Play the animation ----- Runs the animation.[/size]
k:AdjustSpeed(1) --Set '1' to any value you want to adjust the animation speed. I suggest keep it here. Looks smoother.[/size] --Set '1' to any value you want to adjust the animation speed. I suggest keep it here. Looks smoother.[/size]
end})



Tab2:CreateToggle({
	Name = "Take the L",
	Callback = function(state)
	if state then
  Player = "LocalPlayer" --- you can still put any player name here
AnimationId = "13233771992" --- add ID's from the bottom[/size]
local Anim = Instance.new("Animation") --- Creates animation[/size]
Anim.AnimationId = "rbxassetid://"..AnimationId ---- inserts the ID[/size]
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim) --- makes the animation a function[/size]
k:Play() --Play the animation ----- Runs the animation.[/size]
k:AdjustSpeed(1) --Set '1' to any value you want to adjust the animation speed. I suggest keep it here. Looks smoother.[/size] --Set '1' to any value you want to adjust the animation speed. I suggest keep it here. Looks smoother.[/size]

else

h = game.Players.LocalPlayer.Character.Humanoid
tracks = h:GetPlayingAnimationTracks()
for _,x in pairs(tracks)
do x:Stop()
end

end
end})


Tab2:CreateButton({
	Name = "Sui",
	Callback = function()
  Player = "LocalPlayer" --- you can still put any player name here
AnimationId = "13545327424" --- add ID's from the bottom[/size]
local Anim = Instance.new("Animation") --- Creates animation[/size]
Anim.AnimationId = "rbxassetid://"..AnimationId ---- inserts the ID[/size]
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim) --- makes the animation a function[/size]
k:Play() --Play the animation ----- Runs the animation.[/size]
k:AdjustSpeed(1) --Set '1' to any value you want to adjust the animation speed. I suggest keep it here. Looks smoother.[/size] --Set '1' to any value you want to adjust the animation speed. I suggest keep it here. Looks smoother.[/size]
end})


Tab2:CreateButton({
	Name = "Helicopter Helicopter",
	Callback = function()
  Player = "LocalPlayer" --- you can still put any player name here
AnimationId = "13774015570" --- add ID's from the bottom[/size]
local Anim = Instance.new("Animation") --- Creates animation[/size]
Anim.AnimationId = "rbxassetid://"..AnimationId ---- inserts the ID[/size]
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim) --- makes the animation a function[/size]
k:Play() --Play the animation ----- Runs the animation.[/size]
k:AdjustSpeed(1) --Set '1' to any value you want to adjust the animation speed. I suggest keep it here. Looks smoother.[/size] --Set '1' to any value you want to adjust the animation speed. I suggest keep it here. Looks smoother.[/size]
end})


Tab2:CreateToggle({
	Name = "Meditate",
	Callback = function(state)
	if state then
  Player = "LocalPlayer" --- you can still put any player name here
AnimationId = "13663293975" --- add ID's from the bottom[/size]
local Anim = Instance.new("Animation") --- Creates animation[/size]
Anim.AnimationId = "rbxassetid://"..AnimationId ---- inserts the ID[/size]
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim) --- makes the animation a function[/size]
k:Play() --Play the animation ----- Runs the animation.[/size]
k:AdjustSpeed(1) --Set '1' to any value you want to adjust the animation speed. I suggest keep it here. Looks smoother.[/size] --Set '1' to any value you want to adjust the animation speed. I suggest keep it here. Looks smoother.[/size]
else

h = game.Players.LocalPlayer.Character.Humanoid
tracks = h:GetPlayingAnimationTracks()
for _,x in pairs(tracks)
do x:Stop()
end

end
end})

local Tab1 = Window:CreateTab("Misc-Features", 4483362458)


Tab1:CreateButton({
	Name = "Noclip",
	Callback = function()
	 local Noclip = nil
local Clip = nil

function noclip()
	Clip = false
	local function Nocl()
		if Clip == false and game.Players.LocalPlayer.Character ~= nil then
			for _,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
				if v:IsA('BasePart') and v.CanCollide and v.Name ~= floatName then
					v.CanCollide = false
				end
			end
		end
		wait(0.21) -- basic optimization
	end
	Noclip = game:GetService('RunService').Stepped:Connect(Nocl)
end

function clip()
	if Noclip then Noclip:Disconnect() end
	Clip = true
end

noclip() -- to toggle noclip() and clip()
		end,
})


Tab1:CreateButton({
	Name = "CFrame Speed (Z)",
	Callback = function()
 	repeat
		wait()
	until game:IsLoaded()
	local L_134_ = game:service('Players')
	local L_135_ = L_134_.LocalPlayer
	repeat
		wait()
	until L_135_.Character
	local L_136_ = game:service('UserInputService')
	local L_137_ = game:service('RunService')
	getgenv().Multiplier = 0.5
	local L_138_ = true
	local L_139_
	L_136_.InputBegan:connect(function(L_140_arg0)
		if L_140_arg0.KeyCode == Enum.KeyCode.LeftBracket then
			Multiplier = Multiplier + 0.01
			print(Multiplier)
			wait(0.2)
			while L_136_:IsKeyDown(Enum.KeyCode.LeftBracket) do
				wait()
				Multiplier = Multiplier + 0.01
				print(Multiplier)
			end
		end
		if L_140_arg0.KeyCode == Enum.KeyCode.RightBracket then
			Multiplier = Multiplier - 0.01
			print(Multiplier)
			wait(0.2)
			while L_136_:IsKeyDown(Enum.KeyCode.RightBracket) do
				wait()
				Multiplier = Multiplier - 0.01
				print(Multiplier)
			end
		end
		if L_140_arg0.KeyCode == Enum.KeyCode.Z then
			L_138_ = not L_138_
			if L_138_ == true then
				repeat
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + game.Players.LocalPlayer.Character.Humanoid.MoveDirection * Multiplier
					game:GetService("RunService").Stepped:wait()
				until L_138_ == false
			end
		end
	end)
end})


   
   local Slider = Tab1:CreateSlider({
	Name = "CFrame Speed",
	Range = {0, .37},
	Increment = .01,
	Suffix = "Speed",
	CurrentValue = 0,
	Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(s)
 getgenv().Multiplier = s
	end,
})

	 Tab1:CreateToggle({
	Name = "Infinite Jump",
	CurrentValue = false,
	Callback = function(state)
	   if state then
    _G.infinjump = true
    local Player = game:GetService("Players").LocalPlayer
    local Mouse = Player:GetMouse()
    Mouse.KeyDown:connect(function(k)
    if _G.infinjump then
    if k:byte() == 32 then
    Humanoid = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    Humanoid:ChangeState("Jumping")
    wait(0.1)
    Humanoid:ChangeState("Seated")
    end
    end
    end)
    local Player = game:GetService("Players").LocalPlayer
    local Mouse = Player:GetMouse()
        else
    if _G.infinjump == true then
    _G.infinjump = false
    else
    _G.infinjump = true
    end
    end
	end,
})



Tab1:CreateButton({
	Name = "FPS Booster",
	Callback = function()
     for _,v in pairs(workspace:GetDescendants()) do
if v.ClassName == "Part"
or v.ClassName == "SpawnLocation"
or v.ClassName == "WedgePart"
or v.ClassName == "Terrain"
or v.ClassName == "MeshPart" then
v.Material = "Plastic"
end
end
end})

local Tab = Window:CreateTab("Credits", 4483362458) -- Title, Image


Tab:CreateLabel("Credits")
Tab:CreateButton({
	Name = "Made By Legend HandlesYT",
	Callback = function()
        Game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(3432.12598, 140.795761, 1771.28772, 0.374604106, 0, 0.92718488, 0, 1, 0, -0.92718488, 0, 0.374604106)
	end,
})


   

for _, v in pairs(Functions) do
	task.spawn(v)
end
